version: '3.4'

networks: 
  keycloak-net:

volumes:
  keycloak-datastore:

services:
  kong-migrate:
    image: kong-oidc:local
    restart: on-failure
    command: kong migrations bootstrap
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=db
      - KONG_PG_DATABASE=kong
      - KONG_PG_USER=postgres
      - KONG_PG_PASSWORD=postgres
    depends_on:
      - db
    networks:
      - keycloak-net
  kong:
    image: kong-oidc:local
    extra_hosts:
      - "keycloak-host:192.168.32.4"
    depends_on:
      - kong-migrate
    networks:
      - keycloak-net
    ports:
      - "8000:8000" # Listener
      - "8001:8001" # Admin API
      - "8443:8443" # Listener  (SSL)
      - "8444:8444" # Admin API (SSL)
    environment:
      KONG_LOG_LEVEL: debug
      KONG_DATABASE:         postgres
      KONG_PG_HOST:          db
      KONG_PG_PORT:          5432
      KONG_PG_DATABASE:      kong
      KONG_PG_USER:          postgres
      KONG_PG_PASSWORD:      postgres
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG:  /dev/stderr
      KONG_ADMIN_ERROR_LOG:  /dev/stderr
      KONG_PROXY_LISTEN:     0.0.0.0:8000, 0.0.0.0:8443 ssl
      KONG_ADMIN_LISTEN:     0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_PLUGINS:          oidc

  konga-prepare:
    image: pantsel/konga
    command: "-c prepare -a postgres -u postgresql://postgres:postgres@db:5432/konga"
    networks:
      - keycloak-net
    restart: on-failure
    links:
      - db
    depends_on:
      - db

  konga:
    image: pantsel/konga
    ports:
      - 1337:1337
    environment:
      - DB_ADAPTER=postgres
      - DB_HOST=db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - TOKEN_SECRET=km1GUr4RkcQD7DewhJPNXrCuZwcKmqjb
      - DB_DATABASE=konga
      - NODE_ENV=production
    depends_on:
      - kong
      - db
    networks:
      - keycloak-net
  db:
    image: postgres:9.6
    volumes:
      - ./keycloak-datastore:/var/lib/postgresql/data
    networks:
      - keycloak-net
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB:       keycloak
      POSTGRES_USER:     postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: ["postgres", "-c", "log_statement=all", "-c", "log_destination=stderr"]
  keycloak:
    image: quay.io/keycloak/keycloak:16.0.0
    networks:
      - keycloak-net
    depends_on:
      - db
    ports:
      - "8080:8080"
    environment:
      DB_VENDOR:   POSTGRES
      DB_ADDR:     db
      DB_PORT:     5432
      DB_DATABASE: keycloak
      DB_USER:     postgres
      DB_PASSWORD: postgres
      KEYCLOAK_USER:     admin
      KEYCLOAK_PASSWORD: admin
      KEYCLOAK_LOGLEVEL: DEBUG
      JAVA_OPTS: "-Dkeycloak.profile=preview -Dkeycloak.profile.feature.token_exchange=enabled -Dkeycloak.profile.feature.admin_fine_grained_authz=enabled"
